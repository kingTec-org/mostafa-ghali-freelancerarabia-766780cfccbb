<?php

namespace App\Models\Services;

use App\Models\Cart\Cart;
use App\Models\Category\Category;
use App\Models\Category\SubCategory;
use App\Models\Comments\ServicesComments;
use App\Models\Comments\ServicesCommentsReplay;
use App\Models\Item\Item;
use App\Models\User;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

class Service extends Model
{
    use HasFactory, SoftDeletes;

    protected $table = 'service';
    protected $fillable = ['id', 'user_id', 'title', 'description', 'sub_category_id', 'deliver_time', 'details_for_customer',
        'image', 'price', 'admin_accept', 'created_at', 'updated_at', 'deleted_at'];
    protected $appends = ['image'];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::deleted(function ($model) {
            AdditionalServices::where('service_id', $model->id)->delete();
            Cart::where('service_id', $model->id)->delete();
            User\UserFav::where('service_id', $model->id)->delete();
            Item::where('service_id', $model->id)->delete();
            ServicesComments::where('service_id', $model->id)->delete();
            ServicesCommentsReplay::where('service_id', $model->id)->delete();
            ServiceImages::where('service_id', $model->id)->delete();
            ServicsQuestions::where('service_id', $model->id)->delete();
            ServiceTags::where('service_id', $model->id)->delete();
        });
    }

    public function SubCategory()
    {
        return $this->belongsTo(SubCategory::class, 'sub_category_id', 'id');
    }

    public function Tags()
    {
        return $this->belongsTo(ServiceTags::class, 'id', 'service_id');
    }

    public function AdditionalServices()
    {
        return $this->belongsTo(AdditionalServices::class,'id','service_id');
    }

    public function ServiceOwner()
    {
        return $this->belongsTo(User::class, 'user_id', 'id');
    }

    public function images()
    {
        return $this->belongsTo(ServiceImages::class, 'id', 'service_id');
    }

    public function getImageAttribute()
    {
        return !empty($this->attributes['image']) ? app_url('uploads/services/' . $this->attributes['image']) : null;
    }

}
